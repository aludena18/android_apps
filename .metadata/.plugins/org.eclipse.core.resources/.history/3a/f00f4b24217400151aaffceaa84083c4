package com.alg.hunterpersonaltrack;


import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Locale;

import android.app.AlarmManager;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Intent;
import android.location.Location;
import android.location.LocationManager;
import android.os.Bundle;
import android.support.v4.app.NotificationCompat;
import android.support.v7.app.ActionBarActivity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.CompoundButton;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.Switch;
import android.widget.TextView;
import android.widget.Toast;

import com.alg.getset.GpsData;

public class MainActivity extends ActionBarActivity {
	private AlarmManager alarmMgr;
	private PendingIntent pendingIntent;
	
	private NotificationManager nm;
	private static final int ID_NOTIFICATION_CREAR = 1;
	Button btPanico;
	Switch swOnOff;
	TextView tvMensaje;
	
	static final int TIME_INTERVAL = 320;
	
	final String gpsLocationProvider = LocationManager.GPS_PROVIDER;
	private Location lastKnownLocation_byGps;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
		/*CREANDO LA ALARMA*/
		alarmMgr = (AlarmManager)getSystemService(ALARM_SERVICE);
		Intent alarmIntent = new Intent(MainActivity.this, AlarmBreceiver.class);
		pendingIntent = PendingIntent.getBroadcast(MainActivity.this, 0, alarmIntent, 0);

		/*INSTANCIANDO LA VARIABLE DE NOTIFICACION*/
		nm = (NotificationManager)getSystemService(NOTIFICATION_SERVICE);
		
		/*INSTANCIANDO LOS BOTONES*/
		tvMensaje = (TextView)findViewById(R.id.txvMensaje);
		btPanico = (Button)findViewById(R.id.btnPanico);
		swOnOff = (Switch)findViewById(R.id.swtOnOff);
		
		
		btPanico.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				procesoBoton();
			}
		});
		
		swOnOff.setOnCheckedChangeListener(new OnCheckedChangeListener() {
			@Override
			public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
				// TODO Auto-generated method stub
				procesoSwitch(isChecked);
			}
		});
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
	
	public void procesoBoton(){
		Toast.makeText(MainActivity.this, "BOTON DE PANICO ENVIADO", Toast.LENGTH_LONG).show();
	}
	
	public void procesoSwitch(boolean isChecked){
		if(isChecked){
			cancel();
			start();
			notificacion();
			
			/*OBTENIENDO LA ULTIMA POSICION GPS*/
			LocationManager locationManager = (LocationManager)this.getSystemService(this.LOCATION_SERVICE);
			lastKnownLocation_byGps = locationManager.getLastKnownLocation(gpsLocationProvider);
			if(lastKnownLocation_byGps==null) tvMensaje.setText("GPS last location not available");
			else {
				tvMensaje.setText("GPS Location:\n" + lastKnownLocation_byGps.toString());
				procesoTrama(lastKnownLocation_byGps);
			}
			
			Toast.makeText(MainActivity.this, "Encendido", Toast.LENGTH_LONG).show();
		}
		else{
			cancel();
			nm.cancel(ID_NOTIFICATION_CREAR);
			
			tvMensaje.setText("Mensaje");
			
			Toast.makeText(MainActivity.this, "Apagado", Toast.LENGTH_LONG).show();
		}
	}
	
	public void start(){
		Calendar calendar = Calendar.getInstance();
		calendar.setTimeInMillis(System.currentTimeMillis());
		alarmMgr.setRepeating(AlarmManager.ELAPSED_REALTIME_WAKEUP, 10000, 1000*TIME_INTERVAL, pendingIntent);
		System.out.println("Alarm Set");
	}

	public void cancel(){
		alarmMgr.cancel(pendingIntent);
		System.out.println("Alarm Canceled");
	}

	public void notificacion(){
		//Notification notificacion = new Notification(R.drawable.ic_launcher, "Servicio", System.currentTimeMillis());
		NotificationCompat.Builder mBuilder =
			    new NotificationCompat.Builder(this)
			    .setSmallIcon(R.drawable.ic_launcher)
			    .setContentTitle("My notification")
			    .setContentText("Hello World!");
		
		PendingIntent intencionPendiente = PendingIntent.getActivity(this, 0, new Intent(this, MainActivity.class), 0);
		//noti.setLatestEventInfo(this, "Hunter Personal Track", "Aplication", intencionPendiente);
		mBuilder.setContentIntent(intencionPendiente);
		nm.notify(ID_NOTIFICATION_CREAR, mBuilder.build());
	}

	public void procesoTrama(Location location){
		GpsData gpsData = new GpsData();
		long dateCel = System.currentTimeMillis();
		SimpleDateFormat sdf = new SimpleDateFormat("yy/MM/dd/ HH:mm:ss",Locale.US);
		
		gpsData.setTimeGps(location.getTime());
		gpsData.setTime(sdf.format(dateCel).trim());
		gpsData.setLatitude(Double.toString(location.getLatitude()));
		gpsData.setLongitude(Double.toString(location.getLongitude()));
		gpsData.setSpeed(Integer.toString((int)location.getSpeed()*18/5));
		gpsData.setAltitude(Integer.toString((int)location.getAltitude()));
		gpsData.setBearing(Integer.toString((int)location.getBearing()));
		
		
		
	}
}
